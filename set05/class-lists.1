#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.2.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 1187 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 192
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e class-lists) (read-case-sensitive #t) (teachpacks ()) (htdp-settin"
 #"gs #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"extras.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 16 #"felleisen-roster"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 14 #"shivers-roster"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 9 #"make-slip"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 10 #"slip-color"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 10 #"slip-name1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 10 #"slip-name2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 14 #"check-location"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"05\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"class-lists.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; CONSTANTS"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"FELLEISEN-COLOR"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"SHIVERS-COLOR"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; DATA DEFINITIONS:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; A Color is one of"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; -- \"yellow\""
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; -- \"blue\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"slip"
0 0 24 3 2 #" ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 5 #"name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"name2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; A Slip is a (make-slip Color String String)"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; INTERPRETATION:"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; color - represents the color of the slip which is used to"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; determine the professor"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; name1 - stores the first part of a student's name as String"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; name2 - stores the second part of a student's name as String"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; TEMPLATE:"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; slip-fn : Slip -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"slip-fn"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"..."
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"slip-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"slip-name1"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"slip-name2"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; slip-color : Slip -> Color"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; slip-name1 : Slip -> String"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; slip-name2 : Slip -> String"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; GIVEN: a Slip"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; RETURNS: the color of the slip, first name and last name. The"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; above functions are part of Slip struct and are created"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; implicitly when an instance of this struct is created."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;-------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Local variables for testing"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"dk-slip"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-slip"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Deepak\""
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Krishnan\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"kd-slip"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-slip"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Krishnan\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Deepak\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"kn-slip"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-slip"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Kiran\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Nair\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"nk-slip"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-slip"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Nair\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Kiran\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"mr-slip"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-slip"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Manoj\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Ravindran\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"rm-slip"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-slip"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Ravindran\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Manoj\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"tj-slip"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-slip"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Tenny\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Joseph\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"jt-slip"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-slip"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Joseph\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Tenny\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"ga-slip"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-slip"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Gautham\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Asok\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"ag-slip"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-slip"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Asok\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Gautham\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"stud-lst"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 7 #"dk-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"kd-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"kn-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"nk-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"mr-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"rm-slip"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 7 #"tj-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"jt-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"ga-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"ag-slip"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"dk-lst"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"kd-slip"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"no-duplicates-lst"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"dk-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"kn-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"mr-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"tj-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"ga-slip"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 25 #"trimmed-no-duplicates-lst"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"kn-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"mr-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"tj-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"ga-slip"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"felleisen-lst"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"dk-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"kd-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"kn-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"nk-slip"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 7 #"rm-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"tj-slip"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"final-felleisen-lst"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"kd-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"nk-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"rm-slip"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 7 #"tj-slip"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"shivers-lst"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"mr-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"jt-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"ga-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"ag-slip"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"final-shivers-lst"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"mr-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"jt-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"ag-slip"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;-------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; GENERAL HELPER FUNCTIONS"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; filter-duplicate : ListOfSlip -> ListOfSlip"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; GIVEN: a list of Slips"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; RETURNS: a similar list with the duplicate entries for"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; each student removed"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; (filter-duplicate stud-lst) ="
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;  (list"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;   (make-slip \"yellow\" \"Deepak\" \"Krishnan\")"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;   (make-slip \"yellow\" \"Kiran\" \"Nair\")"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;   (make-slip \"yellow\" \"Manoj\" \"Ravindran\")"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;   (make-slip \"blue\" \"Tenny\" \"Joseph\")"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;   (make-slip \"blue\" \"Gautham\" \"Asok\"))"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; STRATEGY: Use HOF foldr on slips"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"filter-duplicate"
0 0 24 3 1 #" "
0 0 14 3 5 #"slips"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 27 #"add-if-no-duplicate-present"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"slips"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"filter-duplicate"
0 0 24 3 1 #" "
0 0 14 3 8 #"stud-lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"kd-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"nk-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"rm-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"jt-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"ag-slip"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 48 #"\"Return a list where all duplicates are removed\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; add-if-no-duplicate-present : Slip ListOfSlip -> ListOfSlip"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; GIVEN: a slip and a list of slips"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; WHERE: the slip and the list of slips form independent sets"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; i.e. the slip passed in as argument is not a part of the"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; list"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; RETURNS: checks for duplicate entries of the slip by"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; comparing it with the each of the elements in the list and"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; returns a updated list which contains the slip if no duplilcate"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; entries are found"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; (add-if-no-duplicate-present dk-slip dk-lst) = (list kd-slip)"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; (add-if-no-duplicate-present dk-slip trimmed-no-duplicates-lst)"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;   = trimmed-no-duplicates-lst"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; STRATEGY: Use HOF ormap on slips"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"add-if-no-duplicate-present"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"slips"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"ormap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"slip"
0 0 24 3 3 #") ("
0 0 14 3 13 #"same-student?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 4 #"slip"
0 0 24 3 3 #")) "
0 0 14 3 5 #"slips"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"slips"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 5 #"slips"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 27 #"add-if-no-duplicate-present"
0 0 24 3 1 #" "
0 0 14 3 7 #"dk-slip"
0 0 24 3 1 #" "
0 0 14 3 6 #"dk-lst"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"kd-slip"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 45 #"\"Add slip to list having a duplicate element\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 27 #"add-if-no-duplicate-present"
0 0 24 3 1 #" "
0 0 14 3 7 #"dk-slip"
0 0 24 3 1 #" "
0 0 14 3 25 #"trimmed-no-duplicates-lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"dk-slip"
0 0 24 3 1 #" "
0 0 14 3 25 #"trimmed-no-duplicates-lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 45 #"\"Add slip to list with no duplicate elements\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; same-student? : Slip Slip -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; GIVEN: two slips"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; RETURNS: whether the two slips contain the information"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; about the same student or not"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; (same-student? dk-slip kd-slip) = #true"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; (same-student? dk-slip kn-slip) = #false"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; STRATEGY: Use template for Slip on slip1 and slip2"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"same-student?"
0 0 24 3 1 #" "
0 0 14 3 5 #"slip1"
0 0 24 3 1 #" "
0 0 14 3 5 #"slip2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"slip-name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"slip1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"slip-name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"slip2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"slip-name2"
0 0 24 3 1 #" "
0 0 14 3 5 #"slip1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"slip-name2"
0 0 24 3 1 #" "
0 0 14 3 5 #"slip2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"slip-name2"
0 0 24 3 1 #" "
0 0 14 3 5 #"slip1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"slip-name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"slip2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"slip-name1"
0 0 24 3 1 #" "
0 0 14 3 5 #"slip1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"slip-name2"
0 0 24 3 1 #" "
0 0 14 3 5 #"slip2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"same-student?"
0 0 24 3 1 #" "
0 0 14 3 7 #"dk-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"kd-slip"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 63
#"\"Compare two slips that contain details about the same student\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"same-student?"
0 0 24 3 1 #" "
0 0 14 3 7 #"kd-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"kd-slip"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 55 #"\"Compare two slips that contain exact same information\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"same-student?"
0 0 24 3 1 #" "
0 0 14 3 7 #"dk-slip"
0 0 24 3 1 #" "
0 0 14 3 7 #"kn-slip"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 69
(
 #"\"Compare two slips that contain details about two different student"
 #"s\""
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; filter-each-student : ListOfSlip Color -> ListOfSlip"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; GIVEN: a list of slips"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; RETURNS: a list of slips which are of the same color as"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; specified within the argument"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; (filter-each-student stud-lst FELLEISEN-COLOR) ="
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;  felleisen-lst"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; (filter-each-student felleisen-lst SHIVERS-COLOR) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; STRATEGY: Use HOF filter on all-slips"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"filter-each-student"
0 0 24 3 1 #" "
0 0 14 3 9 #"all-slips"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"slip-color"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 14 3 5 #"color"
0 0 24 3 3 #")) "
0 0 14 3 9 #"all-slips"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 19 #"filter-each-student"
0 0 24 3 1 #" "
0 0 14 3 8 #"stud-lst"
0 0 24 3 1 #" "
0 0 14 3 15 #"FELLEISEN-COLOR"
0 0 24 3 2 #") "
0 0 14 3 13 #"felleisen-lst"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 53 #"\"Return a list of students in Prof.Felleisen's class\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 19 #"filter-each-student"
0 0 24 3 1 #" "
0 0 14 3 13 #"felleisen-lst"
0 0 24 3 1 #" "
0 0 14 3 13 #"SHIVERS-COLOR"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 50 #"\"Return a list of students in Prof.Shivers' class\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;-------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; filter-felleisen-students : ListOfSlip -> ListOfSlip"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; GIVEN: a list of slips"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; RETURNS: a list which contains only Prof. Felleisen's slips."
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; Note that the duplicate entries are not removed at this stage."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; (filter-felleisen-students stud-lst) = felleisen-lst"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; (filter-felleisen-students shivers-lst) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; STRATEGY: Call a more general function"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"filter-felleisen-students"
0 0 24 3 1 #" "
0 0 14 3 9 #"all-slips"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"filter-each-student"
0 0 24 3 1 #" "
0 0 14 3 9 #"all-slips"
0 0 24 3 1 #" "
0 0 14 3 15 #"FELLEISEN-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 25 #"filter-felleisen-students"
0 0 24 3 1 #" "
0 0 14 3 8 #"stud-lst"
0 0 24 3 2 #") "
0 0 14 3 13 #"felleisen-lst"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 52 #"\"Filter from a list containing Felleisen's students\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 25 #"filter-felleisen-students"
0 0 24 3 1 #" "
0 0 14 3 11 #"shivers-lst"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 67
(
 #"\"Filter from a list which doesn't"
 #" have any of Felleisen's students\""
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; felleisen-roster : ListOfSlip -> ListOfSlip"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; GIVEN: a list of slips"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; RETURNS: a list of slips containing all the students in Professor"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; Felleisen's class, without duplication."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; (felleisen-roster stud-lst) = final-felleisen-lst"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; (felleisen-roster shivers-lst) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; (felleisen-roster empty) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; STRATEGY: Combining simpler functions"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"felleisen-roster"
0 0 24 3 1 #" "
0 0 14 3 9 #"all-slips"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"filter-duplicate"
0 0 24 3 2 #" ("
0 0 14 3 25 #"filter-felleisen-students"
0 0 24 3 1 #" "
0 0 14 3 9 #"all-slips"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 16 #"felleisen-roster"
0 0 24 3 1 #" "
0 0 14 3 8 #"stud-lst"
0 0 24 3 2 #") "
0 0 14 3 19 #"final-felleisen-lst"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 70
(
 #"\"Filter and remove duplicates from a list having Felleisen's studen"
 #"ts\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 16 #"felleisen-roster"
0 0 24 3 1 #" "
0 0 14 3 11 #"shivers-lst"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 70
(
 #"\"Filter and remove duplicates from a list with 0 Felleisen's studen"
 #"ts\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 16 #"felleisen-roster"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 49 #"\"Filter and remove duplicates from an empty list\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;-------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; filter-shivers-students : ListOfSlip -> ListofSlip"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; GIVEN: a list of slips"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; RETURNS: a list which contains only Prof. Shivers' slips."
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; Note that the duplicate entries are not removed at this stage."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; (filter-shivers-students stud-lst) = shivers-lst"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; (filter-shivers-students felleisen-lst) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; (filter-shivers-students empty) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; STRATEGY: Call a more general function"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"filter-shivers-students"
0 0 24 3 1 #" "
0 0 14 3 9 #"all-slips"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 19 #"filter-each-student"
0 0 24 3 1 #" "
0 0 14 3 9 #"all-slips"
0 0 24 3 1 #" "
0 0 14 3 13 #"SHIVERS-COLOR"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"filter-shivers-students"
0 0 24 3 1 #" "
0 0 14 3 8 #"stud-lst"
0 0 24 3 2 #") "
0 0 14 3 11 #"shivers-lst"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 54 #"\"Filter from a list containing Prof.Shivers' students\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"filter-shivers-students"
0 0 24 3 1 #" "
0 0 14 3 13 #"felleisen-lst"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 64
#"\"Filter from a list which doesn't have any of Shivers' students\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 23 #"filter-shivers-students"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 27 #"\"Filter from an empty list\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; shivers-roster: ListOfSlip -> ListOfSlip"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; GIVEN: a list of slips"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; RETURNS: a list of slips containing all the students in Professor"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Shivers' class, without duplication."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; (shivers-roster stud-lst) = final-shivers-lst"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; (shivers-roster felleisen-lst) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; (shivers-roster empty) = empty"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; STRATEGY: Combining simpler functions"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"shivers-roster"
0 0 24 3 1 #" "
0 0 14 3 9 #"all-slips"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"filter-duplicate"
0 0 24 3 2 #" ("
0 0 14 3 23 #"filter-shivers-students"
0 0 24 3 1 #" "
0 0 14 3 9 #"all-slips"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"shivers-roster"
0 0 24 3 1 #" "
0 0 14 3 8 #"stud-lst"
0 0 24 3 2 #") "
0 0 14 3 17 #"final-shivers-lst"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 67
(
 #"\"Filter and remove duplicates fro"
 #"m a list having Shivers' students\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"shivers-roster"
0 0 24 3 1 #" "
0 0 14 3 13 #"felleisen-lst"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 67
(
 #"\"Filter and remove duplicates fro"
 #"m a list with 0 Shivers' students\""
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"shivers-roster"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 49 #"\"Filter and remove duplicates from an empty list\""
0 0 24 3 2 #"))"
0           0
